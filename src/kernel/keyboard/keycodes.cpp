#include "keycodes.hpp"

uint8_t getKeyCode(uint64_t scancode) {
    switch (scancode) {
        case 0x01: return KEYCODE_F9;
        case 0x03: return KEYCODE_F5;
        case 0x04: return KEYCODE_F3;
        case 0x05: return KEYCODE_F1;
        case 0x06: return KEYCODE_F2;
        case 0x07: return KEYCODE_F12;
        case 0x09: return KEYCODE_F10;
        case 0x0A: return KEYCODE_F8;
        case 0x0B: return KEYCODE_F6;
        case 0x0C: return KEYCODE_F4;
        case 0x0D: return KEYCODE_TAB;
        case 0x0E: return KEYCODE_ACUTE;
        case 0x11: return KEYCODE_LEFT_ALT;
        case 0x12: return KEYCODE_LEFT_SHIFT;
        case 0x14: return KEYCODE_LEFT_CTRL;
        case 0x15: return KEYCODE_Q;
        case 0x16: return KEYCODE_1;
        case 0x1A: return KEYCODE_Z;
        case 0x1B: return KEYCODE_S;
        case 0x1C: return KEYCODE_A;
        case 0x1D: return KEYCODE_W;
        case 0x1E: return KEYCODE_2;
        case 0x21: return KEYCODE_C;
        case 0x22: return KEYCODE_X;
        case 0x23: return KEYCODE_D;
        case 0x24: return KEYCODE_E;
        case 0x25: return KEYCODE_4;
        case 0x26: return KEYCODE_3;
        case 0x29: return KEYCODE_SPACEBAR;
        case 0x2A: return KEYCODE_V;
        case 0x2B: return KEYCODE_F;
        case 0x2C: return KEYCODE_T;
        case 0x2D: return KEYCODE_R;
        case 0x2E: return KEYCODE_5;
        case 0x31: return KEYCODE_N;
        case 0x32: return KEYCODE_B;
        case 0x33: return KEYCODE_H;
        case 0x34: return KEYCODE_G;
        case 0x35: return KEYCODE_Y;
        case 0x36: return KEYCODE_6;
        case 0x3A: return KEYCODE_M;
        case 0x3B: return KEYCODE_J;
        case 0x3C: return KEYCODE_U;
        case 0x3D: return KEYCODE_7;
        case 0x3E: return KEYCODE_8;
        case 0x41: return KEYCODE_COMMA;
        case 0x42: return KEYCODE_K;
        case 0x43: return KEYCODE_I;
        case 0x44: return KEYCODE_O;
        case 0x45: return KEYCODE_0;
        case 0x46: return KEYCODE_9;
        case 0x49: return KEYCODE_DOT;
        case 0x4A: return KEYCODE_SLASH;
        case 0x4B: return KEYCODE_L;
        case 0x4C: return KEYCODE_SEMICOLON;
        case 0x4D: return KEYCODE_P;
        case 0x4E: return KEYCODE_MINUS;
        case 0x52: return KEYCODE_APOSTROPHE;
        case 0x54: return KEYCODE_LEFT_BRACKET;
        case 0x55: return KEYCODE_EQUALS;
        case 0x58: return KEYCODE_CAPS_LOCK;
        case 0x59: return KEYCODE_RIGHT_SHIFT;
        case 0x5A: return KEYCODE_ENTER;
        case 0x5B: return KEYCODE_RIGHT_BRACKET;
        case 0x5D: return KEYCODE_BACKSLASH;
        case 0x66: return KEYCODE_BACKSPACE;
        case 0x76: return KEYCODE_ESCAPE;
        case 0x78: return KEYCODE_F11;
        case 0x7E: return KEYCODE_SCROLL_LOCK;
        case 0x83: return KEYCODE_F7;
        case 0xE011: return KEYCODE_RIGHT_ALT;
        case 0xE014: return KEYCODE_RIGHT_CTRL;
        case 0xE069: return KEYCODE_END;
        case 0xE06B: return KEYCODE_LEFT;
        case 0xE06C: return KEYCODE_HOME;
        case 0xE070: return KEYCODE_INSERT;
        case 0xE071: return KEYCODE_DELETE;
        case 0xE072: return KEYCODE_DOWN;
        case 0xE074: return KEYCODE_RIGHT;
        case 0xE075: return KEYCODE_UP;
        case 0xE07A: return KEYCODE_PAGE_DOWN;
        case 0xE07D: return KEYCODE_PAGE_UP;
        case 0xE012E07C: return KEYCODE_PRINT_SCREEN;
        case 0xF001: return KEYCODE_F9;
        case 0xF003: return KEYCODE_F5;
        case 0xF004: return KEYCODE_F3;
        case 0xF005: return KEYCODE_F1;
        case 0xF006: return KEYCODE_F2;
        case 0xF007: return KEYCODE_F12;
        case 0xF009: return KEYCODE_F10;
        case 0xF00A: return KEYCODE_F8;
        case 0xF00B: return KEYCODE_F6;
        case 0xF00C: return KEYCODE_F4;
        case 0xF00D: return KEYCODE_TAB;
        case 0xF00E: return KEYCODE_ACUTE;
        case 0xF011: return KEYCODE_LEFT_ALT;
        case 0xF012: return KEYCODE_LEFT_SHIFT;
        case 0xF014: return KEYCODE_LEFT_CTRL;
        case 0xF015: return KEYCODE_Q;
        case 0xF016: return KEYCODE_1;
        case 0xF01A: return KEYCODE_Z;
        case 0xF01B: return KEYCODE_S;
        case 0xF01C: return KEYCODE_A;
        case 0xF01D: return KEYCODE_W;
        case 0xF01E: return KEYCODE_2;
        case 0xF021: return KEYCODE_C;
        case 0xF022: return KEYCODE_X;
        case 0xF023: return KEYCODE_D;
        case 0xF024: return KEYCODE_E;
        case 0xF025: return KEYCODE_4;
        case 0xF026: return KEYCODE_3;
        case 0xF029: return KEYCODE_SPACEBAR;
        case 0xF02A: return KEYCODE_V;
        case 0xF02B: return KEYCODE_F;
        case 0xF02C: return KEYCODE_T;
        case 0xF02D: return KEYCODE_R;
        case 0xF02E: return KEYCODE_5;
        case 0xF031: return KEYCODE_N;
        case 0xF032: return KEYCODE_B;
        case 0xF033: return KEYCODE_H;
        case 0xF034: return KEYCODE_G;
        case 0xF035: return KEYCODE_Y;
        case 0xF036: return KEYCODE_6;
        case 0xF03A: return KEYCODE_M;
        case 0xF03B: return KEYCODE_J;
        case 0xF03C: return KEYCODE_U;
        case 0xF03D: return KEYCODE_7;
        case 0xF03E: return KEYCODE_8;
        case 0xF041: return KEYCODE_COMMA;
        case 0xF042: return KEYCODE_K;
        case 0xF043: return KEYCODE_I;
        case 0xF044: return KEYCODE_O;
        case 0xF045: return KEYCODE_0;
        case 0xF046: return KEYCODE_9;
        case 0xF049: return KEYCODE_DOT;
        case 0xF04A: return KEYCODE_SLASH;
        case 0xF04B: return KEYCODE_L;
        case 0xF04C: return KEYCODE_SEMICOLON;
        case 0xF04D: return KEYCODE_P;
        case 0xF04E: return KEYCODE_MINUS;
        case 0xF052: return KEYCODE_APOSTROPHE;
        case 0xF054: return KEYCODE_LEFT_BRACKET;
        case 0xF055: return KEYCODE_EQUALS;
        case 0xF058: return KEYCODE_CAPS_LOCK;
        case 0xF059: return KEYCODE_RIGHT_SHIFT;
        case 0xF05A: return KEYCODE_ENTER;
        case 0xF05B: return KEYCODE_RIGHT_BRACKET;
        case 0xF05D: return KEYCODE_BACKSLASH;
        case 0xF066: return KEYCODE_BACKSPACE;
        case 0xF076: return KEYCODE_ESCAPE;
        case 0xF078: return KEYCODE_F11;
        case 0xF07E: return KEYCODE_SCROLL_LOCK;
        case 0xF083: return KEYCODE_F7;
        case 0xE0F011: return KEYCODE_RIGHT_ALT;
        case 0xE0F014: return KEYCODE_RIGHT_CTRL;
        case 0xE0F069: return KEYCODE_END;
        case 0xE0F06B: return KEYCODE_LEFT;
        case 0xE0F06C: return KEYCODE_HOME;
        case 0xE0F070: return KEYCODE_INSERT;
        case 0xE0F071: return KEYCODE_DELETE;
        case 0xE0F072: return KEYCODE_DOWN;
        case 0xE0F074: return KEYCODE_RIGHT;
        case 0xE0F075: return KEYCODE_UP;
        case 0xE0F07A: return KEYCODE_PAGE_DOWN;
        case 0xE0F07D: return KEYCODE_PAGE_UP;
        case 0xE0F012E0F07C: return KEYCODE_PRINT_SCREEN;
        case 0xE11477E1F014F077: return KEYCODE_PAUSE_BREAK;
        default: return 29;
    }
}