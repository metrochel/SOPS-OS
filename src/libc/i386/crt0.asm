;
; crt0.asm - Начальный файл библиотеки Си
;
; С этого файла, а точнее с функции _start в нём, начинается исполнение
; любой программы, написанной на Си.
;

section .text

extern main
extern init_libc
extern _init
extern _fini
extern exit

global _start

;
; _start - Входная точка программы
; Инициализирует стандартную библиотеку Си и начинает
; исполнение с функции main.
; 
; На вход:
;  - Стек (снизу вверх): 
; 	 envp, envc, argv, argc
;
_start:

	; Начинаем мы со сброса EBP и создания так называемой "нулевой рамки".
	; Она нужна для того, чтобы мы могли произвести стактрейс, то есть могли
	; отследить все вызовы функций.
	xor ebp, ebp
	push ebp
	push ebp
	mov ebp, esp
	
	; Начинаем инициализацию стандартной библиотеки.
	; Она принимает ровно те же аргументы, что и наша функция _start.
	push dword [esp + 28]
	push dword [esp + 28]
	push dword [esp + 28]
	push dword [esp + 28]
	call init_libc
	
	; Теперь вызываем глобальные конструкторы.
	; Глобальные конструкторы - это такие функции, которые специально
	; должны быть исполнены до начала выполнения программы, то есть до main.
	call _init
	
	; Вызываем заветную функцию main!
	call main
	
	; Мы молодцы! Ну, почти. Надо только вызвать глобальные деструкторы.
	; Они как конструкторы, только если те вызываются непосредственно до main,
	; то эти - после.
	
	; Сначала сохраним код выхода, он должен быть в EAX.
	push eax
	; Теперь вызовем _fini.
	call _fini
	; А теперь вернём код выхода обратно.
	pop eax
	
	; Вот теперь мы молодцы!
	; Можем вызывать exit и жить припеваючи.
	push eax
	call exit